# 00_TASK.md

## Goal
Mirror the official **JDR Homes – Dovecote Estate (Stanley)** House & Land Packages on my site with **correct images, specs, inclusions, and working floor‑plan click‑through**.

**Source of Truth (only):**
https://www.jdrhomes.com.au/services/house-land-packages/dovecote-estate-stanley/

> Use only the content, specs, images, floor plans and prices from the URL above and the per‑package pages it links to. No placeholders or stock images.

## Deliverables
1) Updated listing grid and detail view.
2) `data/packages.json` populated from JDR.
3) Optimised assets in `/public/assets/dovecote/`.
4) Working CTAs: **View Floor Plan**, **View Full Specs & Inclusions**, **Enquire Now**.

## QA
- Titles, prices, specs, inclusions match JDR **exactly** (verbatim where applicable)
- Floor plan opens in zoomable lightbox; PDF link provided if available
- Mobile responsive
- Alt text present; keyboard accessible lightbox
- No placeholder content remains

---

# data/packages.json (SAMPLE ENTRY — duplicate for each package)
[
  {
    "slug": "bayview-28", 
    "model": "Bayview 28", 
    "estate": "Dovecote Estate, Stanley",
    "lot": "Lot 12",
    "address": "Dovecote Rd, Stanley TAS",
    "price_aud": "AUD 000,000",
    "beds": 4,
    "baths": 2,
    "car": 2,
    "internal_m2": "",
    "external_m2": "",
    "total_m2": "",
    "frontage_m": "",
    "lot_size_m2": "",
    "description": "<VERBATIM SHORT COPY FROM JDR>",
    "features": ["<VERBATIM INCLUSIONS FROM JDR>"] ,
    "hero_image": "/assets/dovecote/bayview-28-hero.jpg",
    "gallery": [
      "/assets/dovecote/bayview-28-01.jpg"
    ],
    "floor_plan_image": "/assets/dovecote/bayview-28-plan.jpg",
    "floor_plan_pdf": "/assets/dovecote/bayview-28-plan.pdf",
    "enquiry_url": "/enquire?package=bayview-28"
  }
]

---

# src/components/Lightbox.jsx
import React, { useEffect } from "react";

export default function Lightbox({ open, onClose, children, label = "Dialog" }) {
  useEffect(() => {
    function onKey(e) { if (e.key === "Escape") onClose?.(); }
    if (open) document.addEventListener("keydown", onKey);
    return () => document.removeEventListener("keydown", onKey);
  }, [open, onClose]);

  if (!open) return null;
  return (
    <div
      role="dialog"
      aria-modal="true"
      aria-label={label}
      className="fixed inset-0 z-50 flex items-center justify-center bg-black/70"
      onClick={onClose}
    >
      <div className="max-w-5xl w-[95vw] max-h-[90vh] bg-white rounded-xl overflow-auto" onClick={(e) => e.stopPropagation()}>
        <button className="m-2 px-3 py-1 rounded bg-black text-white" onClick={onClose}>Close</button>
        <div className="p-3">{children}</div>
      </div>
    </div>
  );
}

---

# src/components/PackageCard.jsx
import React from "react";
import { Link } from "react-router-dom";

export default function PackageCard({ item }) {
  return (
    <div className="rounded-2xl shadow p-3 bg-white flex flex-col">
      <img
        src={item.hero_image}
        alt={`Dovecote Estate — ${item.model} façade render`}
        className="w-full h-48 object-cover rounded-xl"
        loading="lazy"
      />
      <div className="mt-3 flex-1 flex flex-col gap-2">
        <div className="flex items-center justify-between">
          <h3 className="text-lg font-semibold">{item.model}</h3>
          <span className="text-sm font-medium">{item.price_aud}</span>
        </div>
        <div className="text-sm text-gray-700">
          {item.beds} Bed • {item.baths} Bath • {item.car} Car
        </div>
        {(item.frontage_m || item.lot_size_m2) && (
          <div className="text-xs text-gray-500">
            {item.frontage_m && <>Frontage {item.frontage_m}m</>} {item.frontage_m && item.lot_size_m2 && " • "}
            {item.lot_size_m2 && <>Lot {item.lot_size_m2} m²</>}
          </div>
        )}
        <div className="mt-auto flex gap-2">
          <Link to={`/packages/${item.slug}#plan`} className="px-3 py-2 rounded-xl bg-black text-white text-sm">View Floor Plan</Link>
          <Link to={`/packages/${item.slug}#specs`} className="px-3 py-2 rounded-xl border text-sm">Full Specs & Inclusions</Link>
        </div>
        <a href={item.enquiry_url} className="px-3 py-2 rounded-xl bg-gray-900 text-white text-sm text-center">Enquire Now</a>
      </div>
    </div>
  );
}

---

# src/pages/packages/index.jsx
import React from "react";
import data from "../../../data/packages.json";
import PackageCard from "../../components/PackageCard";

export default function PackagesIndex() {
  return (
    <main className="mx-auto max-w-6xl px-4 py-8">
      <header className="mb-6">
        <h1 className="text-2xl font-bold">Dovecote Estate – House & Land Packages</h1>
        <p className="text-gray-600">Official data mirrored from JDR Homes. Images, specs and plans used verbatim.</p>
      </header>
      <section className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5">
        {data.map((item) => (
          <PackageCard key={item.slug} item={item} />
        ))}
      </section>
    </main>
  );
}

---

# src/pages/packages/[slug].jsx
import React, { useMemo, useState } from "react";
import { useParams } from "react-router-dom";
import data from "../../../data/packages.json";
import Lightbox from "../../components/Lightbox";

export default function PackageDetail() {
  const { slug } = useParams();
  const pkg = useMemo(() => data.find((i) => i.slug === slug), [slug]);
  const [open, setOpen] = useState(false);

  if (!pkg) return <main className="p-8">Package not found.</main>;

  return (
    <main className="mx-auto max-w-6xl px-4 py-8">
      <nav className="text-sm mb-4"><a href="/packages" className="underline">← Back to packages</a></nav>
      <header className="mb-6">
        <h1 className="text-2xl font-bold">{pkg.model}</h1>
        <div className="text-gray-700">{pkg.estate}</div>
        <div className="mt-1 font-medium">{pkg.price_aud}</div>
      </header>

      <section className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div>
          <img src={pkg.hero_image} alt={`Dovecote Estate — ${pkg.model} façade render`} className="w-full rounded-xl object-cover" />
          {pkg.gallery?.length > 0 && (
            <div className="grid grid-cols-3 gap-2 mt-2">
              {pkg.gallery.map((src, idx) => (
                <img key={idx} src={src} alt={`${pkg.model} gallery ${idx+1}`} className="w-full h-24 object-cover rounded" />
              ))}
            </div>
          )}
        </div>

        <div id="specs" className="space-y-3">
          <div className="text-sm text-gray-700">{pkg.beds} Bed • {pkg.baths} Bath • {pkg.car} Car</div>
          <table className="text-sm">
            <tbody>
              {pkg.internal_m2 && (<tr><td className="pr-4 text-gray-500">Internal</td><td>{pkg.internal_m2} m²</td></tr>)}
              {pkg.external_m2 && (<tr><td className="pr-4 text-gray-500">External</td><td>{pkg.external_m2} m²</td></tr>)}
              {pkg.total_m2 && (<tr><td className="pr-4 text-gray-500">Total</td><td>{pkg.total_m2} m²</td></tr>)}
              {pkg.frontage_m && (<tr><td className="pr-4 text-gray-500">Frontage</td><td>{pkg.frontage_m} m</td></tr>)}
              {pkg.lot_size_m2 && (<tr><td className="pr-4 text-gray-500">Lot Size</td><td>{pkg.lot_size_m2} m²</td></tr>)}
              {pkg.lot && (<tr><td className="pr-4 text-gray-500">Lot</td><td>{pkg.lot}</td></tr>)}
              {pkg.address && (<tr><td className="pr-4 text-gray-500">Address</td><td>{pkg.address}</td></tr>)}
            </tbody>
          </table>

          {pkg.description && (
            <div className="pt-2 text-sm leading-relaxed">{pkg.description}</div>
          )}

          {Array.isArray(pkg.features) && pkg.features.length > 0 && (
            <details className="mt-3 rounded-xl border p-3 bg-gray-50">
              <summary className="cursor-pointer font-medium">Inclusions & Features</summary>
              <ul className="list-disc pl-6 mt-2 space-y-1">
                {pkg.features.map((f, i) => (<li key={i}>{f}</li>))}
              </ul>
            </details>
          )}

          <div className="flex gap-2 mt-4">
            <a href="#plan" onClick={(e)=>{e.preventDefault(); setOpen(true);}} className="px-3 py-2 rounded-xl bg-black text-white text-sm">View Floor Plan</a>
            <a href={pkg.enquiry_url} className="px-3 py-2 rounded-xl bg-gray-900 text-white text-sm">Enquire Now</a>
          </div>
        </div>
      </section>

      <section id="plan" className="mt-8">
        <h2 className="text-lg font-semibold mb-2">Floor Plan</h2>
        <img
          src={pkg.floor_plan_image}
          alt={`Floor plan — ${pkg.model}`}
          className="w-full max-w-3xl rounded-xl border cursor-zoom-in"
          onClick={() => setOpen(true)}
        />
        {pkg.floor_plan_pdf && (
          <div className="mt-2">
            <a className="underline" href={pkg.floor_plan_pdf} target="_blank" rel="noreferrer">Download Floor Plan (PDF)</a>
          </div>
        )}
      </section>

      <Lightbox open={open} onClose={()=>setOpen(false)} label={`Floor plan — ${pkg.model}`}>
        <img src={pkg.floor_plan_image} alt={`Floor plan — ${pkg.model}`} className="w-full h-auto" />
      </Lightbox>
    </main>
  );
}

---

# NOTES — How to integrate quickly
1) Create folder `data/` at project root and paste **packages.json** there.
2) Put images/PDFs in `public/assets/dovecote/` using the names referenced in JSON.
3) Add the pages and components into your React app (paths above assume Vite/CRA with `src/`).
4) Ensure routing:
   - `/packages` → `PackagesIndex`
   - `/packages/:slug` → `PackageDetail`
5) Ensure some utility CSS is available. (If you don’t use Tailwind, replace class names or add minimal CSS.)
6) Populate `packages.json` for **each** JDR package **verbatim** from the source URL.
